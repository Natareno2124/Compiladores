Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    NOT
    OR
    STRING

Grammar

Rule 0     S' -> programa
Rule 1     programa -> declaraciones
Rule 2     declaraciones -> declaraciones declaracion
Rule 3     declaraciones -> declaraciones asignacion
Rule 4     declaraciones -> declaraciones if_statement
Rule 5     declaraciones -> declaraciones while_statement
Rule 6     declaraciones -> declaracion
Rule 7     declaraciones -> asignacion
Rule 8     declaraciones -> if_statement
Rule 9     declaraciones -> while_statement
Rule 10    declaracion -> INT VAR PYC
Rule 11    declaracion -> CHAR VAR PYC
Rule 12    asignacion -> VAR IGUAL expresion PYC
Rule 13    if_statement -> IF PAR_L expresion PAR_R bloque ELSE bloque
Rule 14    while_statement -> WHILE PAR_L expresion PAR_R bloque
Rule 15    bloque -> LLAVE_L declaraciones LLAVE_R
Rule 16    expresion -> expresion SUM expresion
Rule 17    expresion -> expresion RES expresion
Rule 18    expresion -> expresion MUL expresion
Rule 19    expresion -> expresion DIV expresion
Rule 20    expresion -> expresion MAYOR expresion
Rule 21    expresion -> expresion MENOR expresion
Rule 22    expresion -> NUM
Rule 23    expresion -> VAR

Terminals, with rules where they appear

AND                  : 
CHAR                 : 11
DIV                  : 19
ELSE                 : 13
IF                   : 13
IGUAL                : 12
INT                  : 10
LLAVE_L              : 15
LLAVE_R              : 15
MAYOR                : 20
MENOR                : 21
MUL                  : 18
NOT                  : 
NUM                  : 22
OR                   : 
PAR_L                : 13 14
PAR_R                : 13 14
PYC                  : 10 11 12
RES                  : 17
STRING               : 
SUM                  : 16
VAR                  : 10 11 12 23
WHILE                : 14
error                : 

Nonterminals, with rules where they appear

asignacion           : 3 7
bloque               : 13 13 14
declaracion          : 2 6
declaraciones        : 1 2 3 4 5 15
expresion            : 12 13 14 16 16 17 17 18 18 19 19 20 20 21 21
if_statement         : 4 8
programa             : 0
while_statement      : 5 9

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . declaraciones
    (2) declaraciones -> . declaraciones declaracion
    (3) declaraciones -> . declaraciones asignacion
    (4) declaraciones -> . declaraciones if_statement
    (5) declaraciones -> . declaraciones while_statement
    (6) declaraciones -> . declaracion
    (7) declaraciones -> . asignacion
    (8) declaraciones -> . if_statement
    (9) declaraciones -> . while_statement
    (10) declaracion -> . INT VAR PYC
    (11) declaracion -> . CHAR VAR PYC
    (12) asignacion -> . VAR IGUAL expresion PYC
    (13) if_statement -> . IF PAR_L expresion PAR_R bloque ELSE bloque
    (14) while_statement -> . WHILE PAR_L expresion PAR_R bloque

    INT             shift and go to state 7
    CHAR            shift and go to state 9
    VAR             shift and go to state 8
    IF              shift and go to state 10
    WHILE           shift and go to state 11

    programa                       shift and go to state 1
    declaraciones                  shift and go to state 2
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6

state 1

    (0) S' -> programa .



state 2

    (1) programa -> declaraciones .
    (2) declaraciones -> declaraciones . declaracion
    (3) declaraciones -> declaraciones . asignacion
    (4) declaraciones -> declaraciones . if_statement
    (5) declaraciones -> declaraciones . while_statement
    (10) declaracion -> . INT VAR PYC
    (11) declaracion -> . CHAR VAR PYC
    (12) asignacion -> . VAR IGUAL expresion PYC
    (13) if_statement -> . IF PAR_L expresion PAR_R bloque ELSE bloque
    (14) while_statement -> . WHILE PAR_L expresion PAR_R bloque

    $end            reduce using rule 1 (programa -> declaraciones .)
    INT             shift and go to state 7
    CHAR            shift and go to state 9
    VAR             shift and go to state 8
    IF              shift and go to state 10
    WHILE           shift and go to state 11

    declaracion                    shift and go to state 12
    asignacion                     shift and go to state 13
    if_statement                   shift and go to state 14
    while_statement                shift and go to state 15

state 3

    (6) declaraciones -> declaracion .

    INT             reduce using rule 6 (declaraciones -> declaracion .)
    CHAR            reduce using rule 6 (declaraciones -> declaracion .)
    VAR             reduce using rule 6 (declaraciones -> declaracion .)
    IF              reduce using rule 6 (declaraciones -> declaracion .)
    WHILE           reduce using rule 6 (declaraciones -> declaracion .)
    $end            reduce using rule 6 (declaraciones -> declaracion .)
    LLAVE_R         reduce using rule 6 (declaraciones -> declaracion .)


state 4

    (7) declaraciones -> asignacion .

    INT             reduce using rule 7 (declaraciones -> asignacion .)
    CHAR            reduce using rule 7 (declaraciones -> asignacion .)
    VAR             reduce using rule 7 (declaraciones -> asignacion .)
    IF              reduce using rule 7 (declaraciones -> asignacion .)
    WHILE           reduce using rule 7 (declaraciones -> asignacion .)
    $end            reduce using rule 7 (declaraciones -> asignacion .)
    LLAVE_R         reduce using rule 7 (declaraciones -> asignacion .)


state 5

    (8) declaraciones -> if_statement .

    INT             reduce using rule 8 (declaraciones -> if_statement .)
    CHAR            reduce using rule 8 (declaraciones -> if_statement .)
    VAR             reduce using rule 8 (declaraciones -> if_statement .)
    IF              reduce using rule 8 (declaraciones -> if_statement .)
    WHILE           reduce using rule 8 (declaraciones -> if_statement .)
    $end            reduce using rule 8 (declaraciones -> if_statement .)
    LLAVE_R         reduce using rule 8 (declaraciones -> if_statement .)


state 6

    (9) declaraciones -> while_statement .

    INT             reduce using rule 9 (declaraciones -> while_statement .)
    CHAR            reduce using rule 9 (declaraciones -> while_statement .)
    VAR             reduce using rule 9 (declaraciones -> while_statement .)
    IF              reduce using rule 9 (declaraciones -> while_statement .)
    WHILE           reduce using rule 9 (declaraciones -> while_statement .)
    $end            reduce using rule 9 (declaraciones -> while_statement .)
    LLAVE_R         reduce using rule 9 (declaraciones -> while_statement .)


state 7

    (10) declaracion -> INT . VAR PYC

    VAR             shift and go to state 16


state 8

    (12) asignacion -> VAR . IGUAL expresion PYC

    IGUAL           shift and go to state 17


state 9

    (11) declaracion -> CHAR . VAR PYC

    VAR             shift and go to state 18


state 10

    (13) if_statement -> IF . PAR_L expresion PAR_R bloque ELSE bloque

    PAR_L           shift and go to state 19


state 11

    (14) while_statement -> WHILE . PAR_L expresion PAR_R bloque

    PAR_L           shift and go to state 20


state 12

    (2) declaraciones -> declaraciones declaracion .

    INT             reduce using rule 2 (declaraciones -> declaraciones declaracion .)
    CHAR            reduce using rule 2 (declaraciones -> declaraciones declaracion .)
    VAR             reduce using rule 2 (declaraciones -> declaraciones declaracion .)
    IF              reduce using rule 2 (declaraciones -> declaraciones declaracion .)
    WHILE           reduce using rule 2 (declaraciones -> declaraciones declaracion .)
    $end            reduce using rule 2 (declaraciones -> declaraciones declaracion .)
    LLAVE_R         reduce using rule 2 (declaraciones -> declaraciones declaracion .)


state 13

    (3) declaraciones -> declaraciones asignacion .

    INT             reduce using rule 3 (declaraciones -> declaraciones asignacion .)
    CHAR            reduce using rule 3 (declaraciones -> declaraciones asignacion .)
    VAR             reduce using rule 3 (declaraciones -> declaraciones asignacion .)
    IF              reduce using rule 3 (declaraciones -> declaraciones asignacion .)
    WHILE           reduce using rule 3 (declaraciones -> declaraciones asignacion .)
    $end            reduce using rule 3 (declaraciones -> declaraciones asignacion .)
    LLAVE_R         reduce using rule 3 (declaraciones -> declaraciones asignacion .)


state 14

    (4) declaraciones -> declaraciones if_statement .

    INT             reduce using rule 4 (declaraciones -> declaraciones if_statement .)
    CHAR            reduce using rule 4 (declaraciones -> declaraciones if_statement .)
    VAR             reduce using rule 4 (declaraciones -> declaraciones if_statement .)
    IF              reduce using rule 4 (declaraciones -> declaraciones if_statement .)
    WHILE           reduce using rule 4 (declaraciones -> declaraciones if_statement .)
    $end            reduce using rule 4 (declaraciones -> declaraciones if_statement .)
    LLAVE_R         reduce using rule 4 (declaraciones -> declaraciones if_statement .)


state 15

    (5) declaraciones -> declaraciones while_statement .

    INT             reduce using rule 5 (declaraciones -> declaraciones while_statement .)
    CHAR            reduce using rule 5 (declaraciones -> declaraciones while_statement .)
    VAR             reduce using rule 5 (declaraciones -> declaraciones while_statement .)
    IF              reduce using rule 5 (declaraciones -> declaraciones while_statement .)
    WHILE           reduce using rule 5 (declaraciones -> declaraciones while_statement .)
    $end            reduce using rule 5 (declaraciones -> declaraciones while_statement .)
    LLAVE_R         reduce using rule 5 (declaraciones -> declaraciones while_statement .)


state 16

    (10) declaracion -> INT VAR . PYC

    PYC             shift and go to state 21


state 17

    (12) asignacion -> VAR IGUAL . expresion PYC
    (16) expresion -> . expresion SUM expresion
    (17) expresion -> . expresion RES expresion
    (18) expresion -> . expresion MUL expresion
    (19) expresion -> . expresion DIV expresion
    (20) expresion -> . expresion MAYOR expresion
    (21) expresion -> . expresion MENOR expresion
    (22) expresion -> . NUM
    (23) expresion -> . VAR

    NUM             shift and go to state 24
    VAR             shift and go to state 22

    expresion                      shift and go to state 23

state 18

    (11) declaracion -> CHAR VAR . PYC

    PYC             shift and go to state 25


state 19

    (13) if_statement -> IF PAR_L . expresion PAR_R bloque ELSE bloque
    (16) expresion -> . expresion SUM expresion
    (17) expresion -> . expresion RES expresion
    (18) expresion -> . expresion MUL expresion
    (19) expresion -> . expresion DIV expresion
    (20) expresion -> . expresion MAYOR expresion
    (21) expresion -> . expresion MENOR expresion
    (22) expresion -> . NUM
    (23) expresion -> . VAR

    NUM             shift and go to state 24
    VAR             shift and go to state 22

    expresion                      shift and go to state 26

state 20

    (14) while_statement -> WHILE PAR_L . expresion PAR_R bloque
    (16) expresion -> . expresion SUM expresion
    (17) expresion -> . expresion RES expresion
    (18) expresion -> . expresion MUL expresion
    (19) expresion -> . expresion DIV expresion
    (20) expresion -> . expresion MAYOR expresion
    (21) expresion -> . expresion MENOR expresion
    (22) expresion -> . NUM
    (23) expresion -> . VAR

    NUM             shift and go to state 24
    VAR             shift and go to state 22

    expresion                      shift and go to state 27

state 21

    (10) declaracion -> INT VAR PYC .

    INT             reduce using rule 10 (declaracion -> INT VAR PYC .)
    CHAR            reduce using rule 10 (declaracion -> INT VAR PYC .)
    VAR             reduce using rule 10 (declaracion -> INT VAR PYC .)
    IF              reduce using rule 10 (declaracion -> INT VAR PYC .)
    WHILE           reduce using rule 10 (declaracion -> INT VAR PYC .)
    $end            reduce using rule 10 (declaracion -> INT VAR PYC .)
    LLAVE_R         reduce using rule 10 (declaracion -> INT VAR PYC .)


state 22

    (23) expresion -> VAR .

    PYC             reduce using rule 23 (expresion -> VAR .)
    SUM             reduce using rule 23 (expresion -> VAR .)
    RES             reduce using rule 23 (expresion -> VAR .)
    MUL             reduce using rule 23 (expresion -> VAR .)
    DIV             reduce using rule 23 (expresion -> VAR .)
    MAYOR           reduce using rule 23 (expresion -> VAR .)
    MENOR           reduce using rule 23 (expresion -> VAR .)
    PAR_R           reduce using rule 23 (expresion -> VAR .)


state 23

    (12) asignacion -> VAR IGUAL expresion . PYC
    (16) expresion -> expresion . SUM expresion
    (17) expresion -> expresion . RES expresion
    (18) expresion -> expresion . MUL expresion
    (19) expresion -> expresion . DIV expresion
    (20) expresion -> expresion . MAYOR expresion
    (21) expresion -> expresion . MENOR expresion

    PYC             shift and go to state 28
    SUM             shift and go to state 29
    RES             shift and go to state 30
    MUL             shift and go to state 31
    DIV             shift and go to state 32
    MAYOR           shift and go to state 33
    MENOR           shift and go to state 34


state 24

    (22) expresion -> NUM .

    PYC             reduce using rule 22 (expresion -> NUM .)
    SUM             reduce using rule 22 (expresion -> NUM .)
    RES             reduce using rule 22 (expresion -> NUM .)
    MUL             reduce using rule 22 (expresion -> NUM .)
    DIV             reduce using rule 22 (expresion -> NUM .)
    MAYOR           reduce using rule 22 (expresion -> NUM .)
    MENOR           reduce using rule 22 (expresion -> NUM .)
    PAR_R           reduce using rule 22 (expresion -> NUM .)


state 25

    (11) declaracion -> CHAR VAR PYC .

    INT             reduce using rule 11 (declaracion -> CHAR VAR PYC .)
    CHAR            reduce using rule 11 (declaracion -> CHAR VAR PYC .)
    VAR             reduce using rule 11 (declaracion -> CHAR VAR PYC .)
    IF              reduce using rule 11 (declaracion -> CHAR VAR PYC .)
    WHILE           reduce using rule 11 (declaracion -> CHAR VAR PYC .)
    $end            reduce using rule 11 (declaracion -> CHAR VAR PYC .)
    LLAVE_R         reduce using rule 11 (declaracion -> CHAR VAR PYC .)


state 26

    (13) if_statement -> IF PAR_L expresion . PAR_R bloque ELSE bloque
    (16) expresion -> expresion . SUM expresion
    (17) expresion -> expresion . RES expresion
    (18) expresion -> expresion . MUL expresion
    (19) expresion -> expresion . DIV expresion
    (20) expresion -> expresion . MAYOR expresion
    (21) expresion -> expresion . MENOR expresion

    PAR_R           shift and go to state 35
    SUM             shift and go to state 29
    RES             shift and go to state 30
    MUL             shift and go to state 31
    DIV             shift and go to state 32
    MAYOR           shift and go to state 33
    MENOR           shift and go to state 34


state 27

    (14) while_statement -> WHILE PAR_L expresion . PAR_R bloque
    (16) expresion -> expresion . SUM expresion
    (17) expresion -> expresion . RES expresion
    (18) expresion -> expresion . MUL expresion
    (19) expresion -> expresion . DIV expresion
    (20) expresion -> expresion . MAYOR expresion
    (21) expresion -> expresion . MENOR expresion

    PAR_R           shift and go to state 36
    SUM             shift and go to state 29
    RES             shift and go to state 30
    MUL             shift and go to state 31
    DIV             shift and go to state 32
    MAYOR           shift and go to state 33
    MENOR           shift and go to state 34


state 28

    (12) asignacion -> VAR IGUAL expresion PYC .

    INT             reduce using rule 12 (asignacion -> VAR IGUAL expresion PYC .)
    CHAR            reduce using rule 12 (asignacion -> VAR IGUAL expresion PYC .)
    VAR             reduce using rule 12 (asignacion -> VAR IGUAL expresion PYC .)
    IF              reduce using rule 12 (asignacion -> VAR IGUAL expresion PYC .)
    WHILE           reduce using rule 12 (asignacion -> VAR IGUAL expresion PYC .)
    $end            reduce using rule 12 (asignacion -> VAR IGUAL expresion PYC .)
    LLAVE_R         reduce using rule 12 (asignacion -> VAR IGUAL expresion PYC .)


state 29

    (16) expresion -> expresion SUM . expresion
    (16) expresion -> . expresion SUM expresion
    (17) expresion -> . expresion RES expresion
    (18) expresion -> . expresion MUL expresion
    (19) expresion -> . expresion DIV expresion
    (20) expresion -> . expresion MAYOR expresion
    (21) expresion -> . expresion MENOR expresion
    (22) expresion -> . NUM
    (23) expresion -> . VAR

    NUM             shift and go to state 24
    VAR             shift and go to state 22

    expresion                      shift and go to state 37

state 30

    (17) expresion -> expresion RES . expresion
    (16) expresion -> . expresion SUM expresion
    (17) expresion -> . expresion RES expresion
    (18) expresion -> . expresion MUL expresion
    (19) expresion -> . expresion DIV expresion
    (20) expresion -> . expresion MAYOR expresion
    (21) expresion -> . expresion MENOR expresion
    (22) expresion -> . NUM
    (23) expresion -> . VAR

    NUM             shift and go to state 24
    VAR             shift and go to state 22

    expresion                      shift and go to state 38

state 31

    (18) expresion -> expresion MUL . expresion
    (16) expresion -> . expresion SUM expresion
    (17) expresion -> . expresion RES expresion
    (18) expresion -> . expresion MUL expresion
    (19) expresion -> . expresion DIV expresion
    (20) expresion -> . expresion MAYOR expresion
    (21) expresion -> . expresion MENOR expresion
    (22) expresion -> . NUM
    (23) expresion -> . VAR

    NUM             shift and go to state 24
    VAR             shift and go to state 22

    expresion                      shift and go to state 39

state 32

    (19) expresion -> expresion DIV . expresion
    (16) expresion -> . expresion SUM expresion
    (17) expresion -> . expresion RES expresion
    (18) expresion -> . expresion MUL expresion
    (19) expresion -> . expresion DIV expresion
    (20) expresion -> . expresion MAYOR expresion
    (21) expresion -> . expresion MENOR expresion
    (22) expresion -> . NUM
    (23) expresion -> . VAR

    NUM             shift and go to state 24
    VAR             shift and go to state 22

    expresion                      shift and go to state 40

state 33

    (20) expresion -> expresion MAYOR . expresion
    (16) expresion -> . expresion SUM expresion
    (17) expresion -> . expresion RES expresion
    (18) expresion -> . expresion MUL expresion
    (19) expresion -> . expresion DIV expresion
    (20) expresion -> . expresion MAYOR expresion
    (21) expresion -> . expresion MENOR expresion
    (22) expresion -> . NUM
    (23) expresion -> . VAR

    NUM             shift and go to state 24
    VAR             shift and go to state 22

    expresion                      shift and go to state 41

state 34

    (21) expresion -> expresion MENOR . expresion
    (16) expresion -> . expresion SUM expresion
    (17) expresion -> . expresion RES expresion
    (18) expresion -> . expresion MUL expresion
    (19) expresion -> . expresion DIV expresion
    (20) expresion -> . expresion MAYOR expresion
    (21) expresion -> . expresion MENOR expresion
    (22) expresion -> . NUM
    (23) expresion -> . VAR

    NUM             shift and go to state 24
    VAR             shift and go to state 22

    expresion                      shift and go to state 42

state 35

    (13) if_statement -> IF PAR_L expresion PAR_R . bloque ELSE bloque
    (15) bloque -> . LLAVE_L declaraciones LLAVE_R

    LLAVE_L         shift and go to state 44

    bloque                         shift and go to state 43

state 36

    (14) while_statement -> WHILE PAR_L expresion PAR_R . bloque
    (15) bloque -> . LLAVE_L declaraciones LLAVE_R

    LLAVE_L         shift and go to state 44

    bloque                         shift and go to state 45

state 37

    (16) expresion -> expresion SUM expresion .
    (16) expresion -> expresion . SUM expresion
    (17) expresion -> expresion . RES expresion
    (18) expresion -> expresion . MUL expresion
    (19) expresion -> expresion . DIV expresion
    (20) expresion -> expresion . MAYOR expresion
    (21) expresion -> expresion . MENOR expresion

    PYC             reduce using rule 16 (expresion -> expresion SUM expresion .)
    SUM             reduce using rule 16 (expresion -> expresion SUM expresion .)
    RES             reduce using rule 16 (expresion -> expresion SUM expresion .)
    MAYOR           reduce using rule 16 (expresion -> expresion SUM expresion .)
    MENOR           reduce using rule 16 (expresion -> expresion SUM expresion .)
    PAR_R           reduce using rule 16 (expresion -> expresion SUM expresion .)
    MUL             shift and go to state 31
    DIV             shift and go to state 32

  ! MUL             [ reduce using rule 16 (expresion -> expresion SUM expresion .) ]
  ! DIV             [ reduce using rule 16 (expresion -> expresion SUM expresion .) ]
  ! SUM             [ shift and go to state 29 ]
  ! RES             [ shift and go to state 30 ]
  ! MAYOR           [ shift and go to state 33 ]
  ! MENOR           [ shift and go to state 34 ]


state 38

    (17) expresion -> expresion RES expresion .
    (16) expresion -> expresion . SUM expresion
    (17) expresion -> expresion . RES expresion
    (18) expresion -> expresion . MUL expresion
    (19) expresion -> expresion . DIV expresion
    (20) expresion -> expresion . MAYOR expresion
    (21) expresion -> expresion . MENOR expresion

    PYC             reduce using rule 17 (expresion -> expresion RES expresion .)
    SUM             reduce using rule 17 (expresion -> expresion RES expresion .)
    RES             reduce using rule 17 (expresion -> expresion RES expresion .)
    MAYOR           reduce using rule 17 (expresion -> expresion RES expresion .)
    MENOR           reduce using rule 17 (expresion -> expresion RES expresion .)
    PAR_R           reduce using rule 17 (expresion -> expresion RES expresion .)
    MUL             shift and go to state 31
    DIV             shift and go to state 32

  ! MUL             [ reduce using rule 17 (expresion -> expresion RES expresion .) ]
  ! DIV             [ reduce using rule 17 (expresion -> expresion RES expresion .) ]
  ! SUM             [ shift and go to state 29 ]
  ! RES             [ shift and go to state 30 ]
  ! MAYOR           [ shift and go to state 33 ]
  ! MENOR           [ shift and go to state 34 ]


state 39

    (18) expresion -> expresion MUL expresion .
    (16) expresion -> expresion . SUM expresion
    (17) expresion -> expresion . RES expresion
    (18) expresion -> expresion . MUL expresion
    (19) expresion -> expresion . DIV expresion
    (20) expresion -> expresion . MAYOR expresion
    (21) expresion -> expresion . MENOR expresion

    PYC             reduce using rule 18 (expresion -> expresion MUL expresion .)
    SUM             reduce using rule 18 (expresion -> expresion MUL expresion .)
    RES             reduce using rule 18 (expresion -> expresion MUL expresion .)
    MUL             reduce using rule 18 (expresion -> expresion MUL expresion .)
    DIV             reduce using rule 18 (expresion -> expresion MUL expresion .)
    MAYOR           reduce using rule 18 (expresion -> expresion MUL expresion .)
    MENOR           reduce using rule 18 (expresion -> expresion MUL expresion .)
    PAR_R           reduce using rule 18 (expresion -> expresion MUL expresion .)

  ! SUM             [ shift and go to state 29 ]
  ! RES             [ shift and go to state 30 ]
  ! MUL             [ shift and go to state 31 ]
  ! DIV             [ shift and go to state 32 ]
  ! MAYOR           [ shift and go to state 33 ]
  ! MENOR           [ shift and go to state 34 ]


state 40

    (19) expresion -> expresion DIV expresion .
    (16) expresion -> expresion . SUM expresion
    (17) expresion -> expresion . RES expresion
    (18) expresion -> expresion . MUL expresion
    (19) expresion -> expresion . DIV expresion
    (20) expresion -> expresion . MAYOR expresion
    (21) expresion -> expresion . MENOR expresion

    PYC             reduce using rule 19 (expresion -> expresion DIV expresion .)
    SUM             reduce using rule 19 (expresion -> expresion DIV expresion .)
    RES             reduce using rule 19 (expresion -> expresion DIV expresion .)
    MUL             reduce using rule 19 (expresion -> expresion DIV expresion .)
    DIV             reduce using rule 19 (expresion -> expresion DIV expresion .)
    MAYOR           reduce using rule 19 (expresion -> expresion DIV expresion .)
    MENOR           reduce using rule 19 (expresion -> expresion DIV expresion .)
    PAR_R           reduce using rule 19 (expresion -> expresion DIV expresion .)

  ! SUM             [ shift and go to state 29 ]
  ! RES             [ shift and go to state 30 ]
  ! MUL             [ shift and go to state 31 ]
  ! DIV             [ shift and go to state 32 ]
  ! MAYOR           [ shift and go to state 33 ]
  ! MENOR           [ shift and go to state 34 ]


state 41

    (20) expresion -> expresion MAYOR expresion .
    (16) expresion -> expresion . SUM expresion
    (17) expresion -> expresion . RES expresion
    (18) expresion -> expresion . MUL expresion
    (19) expresion -> expresion . DIV expresion
    (20) expresion -> expresion . MAYOR expresion
    (21) expresion -> expresion . MENOR expresion

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for RES resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
    PYC             reduce using rule 20 (expresion -> expresion MAYOR expresion .)
    PAR_R           reduce using rule 20 (expresion -> expresion MAYOR expresion .)
    SUM             shift and go to state 29
    RES             shift and go to state 30
    MUL             shift and go to state 31
    DIV             shift and go to state 32
    MAYOR           shift and go to state 33
    MENOR           shift and go to state 34

  ! SUM             [ reduce using rule 20 (expresion -> expresion MAYOR expresion .) ]
  ! RES             [ reduce using rule 20 (expresion -> expresion MAYOR expresion .) ]
  ! MUL             [ reduce using rule 20 (expresion -> expresion MAYOR expresion .) ]
  ! DIV             [ reduce using rule 20 (expresion -> expresion MAYOR expresion .) ]
  ! MAYOR           [ reduce using rule 20 (expresion -> expresion MAYOR expresion .) ]
  ! MENOR           [ reduce using rule 20 (expresion -> expresion MAYOR expresion .) ]


state 42

    (21) expresion -> expresion MENOR expresion .
    (16) expresion -> expresion . SUM expresion
    (17) expresion -> expresion . RES expresion
    (18) expresion -> expresion . MUL expresion
    (19) expresion -> expresion . DIV expresion
    (20) expresion -> expresion . MAYOR expresion
    (21) expresion -> expresion . MENOR expresion

  ! shift/reduce conflict for SUM resolved as shift
  ! shift/reduce conflict for RES resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
    PYC             reduce using rule 21 (expresion -> expresion MENOR expresion .)
    PAR_R           reduce using rule 21 (expresion -> expresion MENOR expresion .)
    SUM             shift and go to state 29
    RES             shift and go to state 30
    MUL             shift and go to state 31
    DIV             shift and go to state 32
    MAYOR           shift and go to state 33
    MENOR           shift and go to state 34

  ! SUM             [ reduce using rule 21 (expresion -> expresion MENOR expresion .) ]
  ! RES             [ reduce using rule 21 (expresion -> expresion MENOR expresion .) ]
  ! MUL             [ reduce using rule 21 (expresion -> expresion MENOR expresion .) ]
  ! DIV             [ reduce using rule 21 (expresion -> expresion MENOR expresion .) ]
  ! MAYOR           [ reduce using rule 21 (expresion -> expresion MENOR expresion .) ]
  ! MENOR           [ reduce using rule 21 (expresion -> expresion MENOR expresion .) ]


state 43

    (13) if_statement -> IF PAR_L expresion PAR_R bloque . ELSE bloque

    ELSE            shift and go to state 46


state 44

    (15) bloque -> LLAVE_L . declaraciones LLAVE_R
    (2) declaraciones -> . declaraciones declaracion
    (3) declaraciones -> . declaraciones asignacion
    (4) declaraciones -> . declaraciones if_statement
    (5) declaraciones -> . declaraciones while_statement
    (6) declaraciones -> . declaracion
    (7) declaraciones -> . asignacion
    (8) declaraciones -> . if_statement
    (9) declaraciones -> . while_statement
    (10) declaracion -> . INT VAR PYC
    (11) declaracion -> . CHAR VAR PYC
    (12) asignacion -> . VAR IGUAL expresion PYC
    (13) if_statement -> . IF PAR_L expresion PAR_R bloque ELSE bloque
    (14) while_statement -> . WHILE PAR_L expresion PAR_R bloque

    INT             shift and go to state 7
    CHAR            shift and go to state 9
    VAR             shift and go to state 8
    IF              shift and go to state 10
    WHILE           shift and go to state 11

    declaraciones                  shift and go to state 47
    declaracion                    shift and go to state 3
    asignacion                     shift and go to state 4
    if_statement                   shift and go to state 5
    while_statement                shift and go to state 6

state 45

    (14) while_statement -> WHILE PAR_L expresion PAR_R bloque .

    INT             reduce using rule 14 (while_statement -> WHILE PAR_L expresion PAR_R bloque .)
    CHAR            reduce using rule 14 (while_statement -> WHILE PAR_L expresion PAR_R bloque .)
    VAR             reduce using rule 14 (while_statement -> WHILE PAR_L expresion PAR_R bloque .)
    IF              reduce using rule 14 (while_statement -> WHILE PAR_L expresion PAR_R bloque .)
    WHILE           reduce using rule 14 (while_statement -> WHILE PAR_L expresion PAR_R bloque .)
    $end            reduce using rule 14 (while_statement -> WHILE PAR_L expresion PAR_R bloque .)
    LLAVE_R         reduce using rule 14 (while_statement -> WHILE PAR_L expresion PAR_R bloque .)


state 46

    (13) if_statement -> IF PAR_L expresion PAR_R bloque ELSE . bloque
    (15) bloque -> . LLAVE_L declaraciones LLAVE_R

    LLAVE_L         shift and go to state 44

    bloque                         shift and go to state 48

state 47

    (15) bloque -> LLAVE_L declaraciones . LLAVE_R
    (2) declaraciones -> declaraciones . declaracion
    (3) declaraciones -> declaraciones . asignacion
    (4) declaraciones -> declaraciones . if_statement
    (5) declaraciones -> declaraciones . while_statement
    (10) declaracion -> . INT VAR PYC
    (11) declaracion -> . CHAR VAR PYC
    (12) asignacion -> . VAR IGUAL expresion PYC
    (13) if_statement -> . IF PAR_L expresion PAR_R bloque ELSE bloque
    (14) while_statement -> . WHILE PAR_L expresion PAR_R bloque

    LLAVE_R         shift and go to state 49
    INT             shift and go to state 7
    CHAR            shift and go to state 9
    VAR             shift and go to state 8
    IF              shift and go to state 10
    WHILE           shift and go to state 11

    declaracion                    shift and go to state 12
    asignacion                     shift and go to state 13
    if_statement                   shift and go to state 14
    while_statement                shift and go to state 15

state 48

    (13) if_statement -> IF PAR_L expresion PAR_R bloque ELSE bloque .

    INT             reduce using rule 13 (if_statement -> IF PAR_L expresion PAR_R bloque ELSE bloque .)
    CHAR            reduce using rule 13 (if_statement -> IF PAR_L expresion PAR_R bloque ELSE bloque .)
    VAR             reduce using rule 13 (if_statement -> IF PAR_L expresion PAR_R bloque ELSE bloque .)
    IF              reduce using rule 13 (if_statement -> IF PAR_L expresion PAR_R bloque ELSE bloque .)
    WHILE           reduce using rule 13 (if_statement -> IF PAR_L expresion PAR_R bloque ELSE bloque .)
    $end            reduce using rule 13 (if_statement -> IF PAR_L expresion PAR_R bloque ELSE bloque .)
    LLAVE_R         reduce using rule 13 (if_statement -> IF PAR_L expresion PAR_R bloque ELSE bloque .)


state 49

    (15) bloque -> LLAVE_L declaraciones LLAVE_R .

    ELSE            reduce using rule 15 (bloque -> LLAVE_L declaraciones LLAVE_R .)
    INT             reduce using rule 15 (bloque -> LLAVE_L declaraciones LLAVE_R .)
    CHAR            reduce using rule 15 (bloque -> LLAVE_L declaraciones LLAVE_R .)
    VAR             reduce using rule 15 (bloque -> LLAVE_L declaraciones LLAVE_R .)
    IF              reduce using rule 15 (bloque -> LLAVE_L declaraciones LLAVE_R .)
    WHILE           reduce using rule 15 (bloque -> LLAVE_L declaraciones LLAVE_R .)
    $end            reduce using rule 15 (bloque -> LLAVE_L declaraciones LLAVE_R .)
    LLAVE_R         reduce using rule 15 (bloque -> LLAVE_L declaraciones LLAVE_R .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SUM in state 41 resolved as shift
WARNING: shift/reduce conflict for RES in state 41 resolved as shift
WARNING: shift/reduce conflict for MUL in state 41 resolved as shift
WARNING: shift/reduce conflict for DIV in state 41 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 41 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 41 resolved as shift
WARNING: shift/reduce conflict for SUM in state 42 resolved as shift
WARNING: shift/reduce conflict for RES in state 42 resolved as shift
WARNING: shift/reduce conflict for MUL in state 42 resolved as shift
WARNING: shift/reduce conflict for DIV in state 42 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 42 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 42 resolved as shift
